# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows

# branches to build
branches:
  # whitelist
  only:
    - topic/windows

  # blacklist
  except:
    - gh-pages

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

os: Visual Studio 2015

#---------------------------------#
#    environment configuration    #
#---------------------------------#

environment:

  global:
    PYTHON: "C:\\Miniconda3-x64"
    INSTALLZMQ: 1
    INSTALLRMQ: 1
    APPVEYOR_SAVE_CACHE_ON_ERROR: true

  matrix:
    - platform: x64
      PYTHON_VERSION: "2.7"
      INSTALLRMQ: 0
    - platform: x64
      PYTHON_VERSION: "2.7"
    - platform: x64
      PYTHON_VERSION: "3.6"

install:
  - "SET MSVCVER=%APPVEYOR_BUILD_WORKER_IMAGE:~-2,2%"
  - "if %MSVCVER% gtr 11 set /a MSVCVER = MSVCVER - 1"
  - "SET VSINSTALLDIR=%ProgramFiles(x86)%\\Microsoft Visual Studio %MSVCVER%.0\\"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "SET MPLBACKEND=agg"
  # - "SET ZMQINSTALLDIR=C:\\projects"
  - "SET ZMQINSTALLDIR=%APPVEYOR_BUILD_FOLDER%"

  # Setup Visual C++ toolset
  # TODO: Generic case. This is specific to 64bit VS 2015/2017 (14.0/16.0)
  - if "%MSVCVER%" == "16" if "%PLATFORM%" == "x64" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if "%MSVCVER%" == "14" if "%PLATFORM%" == "x64" call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
  - if "%MSVCVER%" == "14" if "%PLATFORM%" == "x64" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64

  # Create a conda environment
  - "conda update -q --yes conda"
  - "conda create -q --yes -n test python=%PYTHON_VERSION%"
  - "activate test"

  # Check that we have the expected version of Python
  - "python --version"

  # Upgrade pip and setuptools and wheel to get clean install
  - "pip install --upgrade pip"
  - "pip install --upgrade wheel"
  - "pip install --upgrade setuptools"

  # Install ZeroMQ
  - "ECHO %CD%"
  # - "set ZMQ_LIB_DIR=C:\\projects\\build_libzmq\\lib\\Release"
  # - "set CZMQ_LIB_DIR=C:\\projects\\build_czmq\\Release"
  - if "%INSTALLZMQ%" == "1" call "ci\\install-czmq-windows.bat"
  - "ECHO %CD%"
  - if "%INSTALLZMQ%" == "1" set PATH=%PATH%;%ZEROMQ_LIBRARY_DIR%;%CZMQ_LIBRARY_DIR%
  # - if "%INSTALLZMQ%" == "1" set PATH=%PATH%;%ZMQ_LIB_DIR%;%CZMQ_LIB_DIR%
  - "ECHO %PATH%"
  # - "ECHO %CZMQ_LIB_DIR%"
  - "ECHO %CZMQ_LIBRARY_DIR%"
  - where zmq.lib
  - where czmq.lib
  - where zmq.h
  - where czmq.h

  # Install & start RabbitMQ
  - "if %INSTALLRMQ% == 1 ci\\install-rmqserver-windows.bat"  
  - "if %INSTALLRMQ% == 1 ci\\start-rmqserver-windows.bat"  

  # Install dependencies using conda/pip
  - "conda install --yes -c conda-forge numpy nose coverage coveralls codecov flake8"
  - "conda install --yes -c conda-forge pystache pyyaml astropy scipy pika"
  - "pip install zmq"

  # Install cis_interface
  - "pip install -e ."

cache:
  - '%LIBSODIUM_SOURCEDIR%'
  - '%LIBZMQ_SOURCEDIR%'
  - '%LIBZMQ_BUILDDIR%'
  - '%CZMQ_SOURCEDIR%'
  - '%CZMQ_BUILDDIR%'
  # - '%ZMQ_LIB_DIR%'
  # -> ci\install-czmq_windows.bat'
  # - '%CZMQ_LIB_DIR%'
  # -> ci\install-czmq_windows.bat'
  - '%LOCALAPPDATA%\pip\Cache'

# Not a .NET project
build: false

before_test:
  - "flake8 cis_interface"

test_script:
  - "nosetests --nologcapture --with-coverage --cover-package=cis_interface -svx cis_interface/drivers/tests/test_GCCModelDriver.py"

after_test:
  - "coveralls"
  - "codecov"

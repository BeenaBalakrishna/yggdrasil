Automatically generated by Mendeley Desktop 1.19.2
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@article{Behnel2011a,
author = {Behnel, Stefan and Bradshaw, Robert and Citro, Craig and Dalcin, Lisandro and Seljebotn, Dag Sverre and Smith, Kurt},
doi = {10.1109/MCSE.2010.118},
issn = {1521-9615},
journal = {Comput. Sci. Eng.},
keywords = {Cython,Python,numerics,scientific computing},
month = {mar},
number = {2},
pages = {31--39},
publisher = {IEEE Educational Activities Department},
title = {{Cython: The Best of Both Worlds}},
url = {http://ieeexplore.ieee.org/document/5582062/},
volume = {13},
year = {2011}
}
@article{Boudon2012,
abstract = {The study of plant development requires increasingly powerful modeling tools to help understand and simulate the growth and functioning of plants. In the last decade, the formalism of L-systems has emerged as a major paradigm for modeling plant development. Previous implementations of this formalism were made based on static languages, i.e., languages that require explicit definition of variable types before using them. These languages are often efficient but involve quite a lot of syntactic overhead, thus restricting the flexibility of use for modelers. In this work, we present an adaptation of L-systems to the Python language, a popular and powerful open-license dynamic language. We show that the use of dynamic language properties makes it possible to enhance the development of plant growth models: (i) by keeping a simple syntax while allowing for high-level programming constructs, (ii) by making code execution easy and avoiding compilation overhead, (iii) by allowing a high-level of model reusability and the building of complex modular models, and (iv) by providing powerful solutions to integrate MTG data-structures (that are a common way to represent plants at several scales) into L-systems and thus enabling to use a wide spectrum of computer tools based on MTGs developed for plant architecture. We then illustrate the use of L-Py in real applications to build complex models or to teach plant modeling in the classroom.},
author = {Boudon, Fr{\'{e}}d{\'{e}}ric and Pradal, Christophe and Cokelaer, Thomas and Prusinkiewicz, Przemyslaw and Godin, Christophe},
doi = {10.3389/fpls.2012.00076},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Boudon et al. - 2012 - L-py an L-system simulation framework for modeling plant architecture development based on a dynamic language.pdf:pdf},
issn = {1664-462X},
journal = {Front. Plant Sci.},
keywords = {FSPM,L-system,MTG,Python language,development,environment,plant modeling},
pages = {76},
pmid = {22670147},
publisher = {Frontiers Media SA},
title = {{L-py: an L-system simulation framework for modeling plant architecture development based on a dynamic language.}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/22670147 http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=PMC3362793},
volume = {3},
year = {2012}
}
@book{Rusling1999,
author = {Rusling, David A.},
chapter = {5},
edition = {0.8-3},
title = {{The Linux Kernel}},
url = {https://www.tldp.org/LDP/tlk/tlk.html},
year = {1999}
}
@techreport{Ben-Kiki2009,
abstract = {Latest (patched) version: HTML: http://yaml.org/spec/1.2/spec.html PDF: http://yaml.org/spec/1.2/spec.pdf PS: http://yaml.org/spec/1.2/spec.ps Errata: http://yaml.org/spec/1.2/errata.html Previous (original) version: http://yaml.org/spec/1. Status of this Document This document reflects the third version of YAML data serialization language. The content of the specification was arrived at by consensus of its authors and through user feedback on the yaml-core mailing list. We encourage implementers to please update their software with support for this version. The primary objective of this revision is to bring YAML into compliance with JSON as an official subset. YAML 1.2 is compatible with 1.1 for most practical applications-this is a minor revision. An expected source of incompatibility with prior versions of YAML, especially the syck implementation, is the change in implicit typing rules. We have removed unique implicit typing rules and have updated these rules to align them with JSON's productions. In this version of YAML, boolean values may be serialized as "true" or "false"; the empty scalar as "null". Unquoted numeric values are a superset of JSON's numeric production. Other changes in the specification were the removal of the Unicode line breaks and production bug fixes. We also define 3 built-in implicit typing rule sets: untyped, strict JSON, and a more flexible YAML rule set that extends JSON typing. The difference between late 1.0 drafts which syck 0.55 implements and the 1.1 revision of this specification is much more extensive. We fixed usability issues with the tagging syntax. In particular, the single exclamation was redefined for private types and a simple prefixing mechanism was introduced. This revision also fixed many production edge cases and introduced a type repository. Therefore, there are several incompatibilities between syck and this revision as well. The list of known errors in this specification is available at http://yaml.org/spec/1.2/errata.html. Please report errors in this document to the yaml-core mailing list. This revision contains fixes for all errors known as of 2009-10-01. We wish to thank implementers who have tirelessly tracked earlier versions of this specification, and our fabulous user community whose feedback has both validated and clarified our direction. Abstract YAML™ (rhymes with "camel") is a human-friendly, cross language, Unicode based data serialization language designed around the common native data types of agile programming languages. It is broadly useful for programming needs ranging from configuration files to Internet messaging to object persistence to data auditing. Together with the Unicode standard for characters, this specification provides all the information necessary to understand YAML Version 1.2 and to create programs that process YAML information. This document may be freely copied, provided it is not modified.},
author = {Ben-Kiki, Oren and Evans, Clark and d{\"{o}}t Net, Ingy},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Ben-Kiki, Evans, d{\"{o}}t Net - 2009 - YAML Ain't Markup Language (YAML™) Version 1.2 YAML Ain't Markup Language (YAML™) Version 1.2 3 r.pdf:pdf},
title = {{YAML Ain't Markup Language (YAML™) Version 1.2 YAML Ain't Markup Language (YAML™) Version 1.2 3 rd Edition, Patched at 2009-10-01}},
url = {http://yaml.org/spec/1.2/spec.html},
year = {2009}
}
@inproceedings{babuji18,
author = {Babuji, Yadu and Chard, Kyle and Foster, Ian and Katz, Daniel S. and Wilde, Michael and Woodard, Anna and Wozniak, Justin},
booktitle = {10th Int. Work. Sci. Gateways},
title = {{Parsl: Scalable Parallel Scripting in Python}},
year = {2018}
}
@misc{RMQ,
publisher = {Pivotal Software, Inc.},
title = {{RabbitMQ}},
url = {https://www.rabbitmq.com/},
urldate = {2018-09-30},
year = {2007}
}
@article{Demir2010,
abstract = {Incompatible data storage formats have hindered the sharing and analyses of digital representations of biological pathways. BioPAX is a standardized language supported by {\textgreater}40 databases and software tools for exchanging pathway data.},
author = {Demir, Emek and Cary, Michael P and Paley, Suzanne and Fukuda, Ken and Lemer, Christian and Vastrik, Imre and Wu, Guanming and D'Eustachio, Peter and Schaefer, Carl and Luciano, Joanne and Schacherer, Frank and Martinez-Flores, Irma and Hu, Zhenjun and Jimenez-Jacinto, Veronica and Joshi-Tope, Geeta and Kandasamy, Kumaran and Lopez-Fuentes, Alejandra C and Mi, Huaiyu and Pichler, Elgar and Rodchenkov, Igor and Splendiani, Andrea and Tkachev, Sasha and Zucker, Jeremy and Gopinath, Gopal and Rajasimha, Harsha and Ramakrishnan, Ranjani and Shah, Imran and Syed, Mustafa and Anwar, Nadia and Babur, {\"{O}}zg{\"{u}}n and Blinov, Michael and Brauner, Erik and Corwin, Dan and Donaldson, Sylva and Gibbons, Frank and Goldberg, Robert and Hornbeck, Peter and Luna, Augustin and Murray-Rust, Peter and Neumann, Eric and Ruebenacker, Oliver and Samwald, Matthias and van Iersel, Martijn and Wimalaratne, Sarala and Allen, Keith and Braun, Burk and Whirl-Carrillo, Michelle and Cheung, Kei-Hoi and Dahlquist, Kam and Finney, Andrew and Gillespie, Marc and Glass, Elizabeth and Gong, Li and Haw, Robin and Honig, Michael and Hubaut, Olivier and Kane, David and Krupa, Shiva and Kutmon, Martina and Leonard, Julie and Marks, Debbie and Merberg, David and Petri, Victoria and Pico, Alex and Ravenscroft, Dean and Ren, Liya and Shah, Nigam and Sunshine, Margot and Tang, Rebecca and Whaley, Ryan and Letovksy, Stan and Buetow, Kenneth H and Rzhetsky, Andrey and Schachter, Vincent and Sobral, Bruno S and Dogrusoz, Ugur and McWeeney, Shannon and Aladjem, Mirit and Birney, Ewan and Collado-Vides, Julio and Goto, Susumu and Hucka, Michael and {Le Nov{\`{e}}re}, Nicolas and Maltsev, Natalia and Pandey, Akhilesh and Thomas, Paul and Wingender, Edgar and Karp, Peter D and Sander, Chris and Bader, Gary D},
doi = {10.1038/nbt.1666},
issn = {1087-0156},
journal = {Nat. Biotechnol.},
keywords = {Cell signalling,Databases},
month = {sep},
number = {9},
pages = {935--942},
publisher = {Nature Publishing Group},
title = {{The BioPAX community standard for pathway data sharing}},
url = {http://www.nature.com/articles/nbt.1666},
volume = {28},
year = {2010}
}
@inproceedings{Pradal2015,
abstract = {Analyzing biological data (e.g., annotating genomes, assembling NGS data...) may involve very complex and inter-linked steps where several tools are combined together. Scientific workflow systems have reached a level of maturity that makes them able to support the design and execution of such in-silico experiments, and thus making them increasingly popular in the bioinformatics community. However, in some emerging application domains such as system biology, developmental biology or ecology, the need for data analysis is combined with the need to model complex multi-scale biological systems, possibly involving multiple simulation steps. This requires the scientific work-flow to deal with retro-action to understand and predict the relationships between structure and function of these complex systems. OpenAlea (openalea.gforge.inria.fr) is the only scientific workflow system able to uniformly address the problem, which made it successful in the scientific community. One of its main originality is to introduce higher-order dataflows as a means to uniformly combine classical data analysis with modeling and simulation. In this demonstration paper, we provide for the first time the description of the OpenAlea system involving an original combination of features. We illustrate the demonstration on a high-throughput workflow in phenotyping, phenomics, and environmental control designed to study the interplay between plant architecture and climatic change.},
address = {New York, New York, USA},
author = {Pradal, Christophe and Fournier, Christian and Valduriez, Patrick and Cohen-Boulakia, Sarah},
booktitle = {Proc. 27th Int. Conf. Sci. Stat. Database Manag. - SSDBM '15},
doi = {10.1145/2791347.2791365},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Pradal et al. - 2015 - OpenAlea.pdf:pdf},
isbn = {9781450337090},
month = {jun},
pages = {1--6},
publisher = {ACM Press},
title = {{OpenAlea}},
url = {http://dl.acm.org/citation.cfm?doid=2791347.2791365},
year = {2015}
}
@misc{luigi,
title = {{Luigi}},
url = {https://github.com/spotify/luigi},
year = {2018}
}
@article{Bernacchi2005,
abstract = {Down-regulation of light-saturated photosynthesis (A(sat)) at elevated atmospheric CO(2) concentration, [CO(2)], has been demonstrated for many C(3) species and is often associated with inability to utilize additional photosynthate and/or nitrogen limitation. In soybean, a nitrogen-fixing species, both limitations are less likely than in crops lacking an N-fixing symbiont. Prior studies have used controlled environment or field enclosures where the artificial environment can modify responses to [CO(2)]. A soybean free air [CO(2)] enrichment (FACE) facility has provided the first opportunity to analyze the effects of elevated [CO(2)] on photosynthesis under fully open-air conditions. Potential ribulose-1,5-bisphosphate carboxylase/oxygenase (Rubisco) carboxylation (V(c,max)) and electron transport through photosystem II (J(max)) were determined from the responses of A(sat) to intercellular [CO(2)] (C(i)) throughout two growing seasons. Mesophyll conductance to CO(2) (g(m)) was determined from the responses of A(sat) and whole chain electron transport (J) to light. Elevated [CO(2)] increased A(sat) by 15-20{\%} even though there was a small, statistically significant, decrease in V(c,max). This differs from previous studies in that V(c,max)/J(max) decreased, inferring a shift in resource investment away from Rubisco. This raised the C(i) at which the transition from Rubisco-limited to ribulose-1,5-bisphosphate regeneration-limited photosynthesis occurred. The decrease in V(c,max) was not the result of a change in g(m), which was unchanged by elevated [CO(2)]. This first analysis of limitations to soybean photosynthesis under fully open-air conditions reveals important differences to prior studies that have used enclosures to elevate [CO(2)], most significantly a smaller response of A(sat) and an apparent shift in resources away from Rubisco relative to capacity for electron transport.},
author = {Bernacchi, Carl J. and Morgan, Patrick B. and Ort, Donald R. and Long, Stephen P.},
doi = {10.1007/s00425-004-1320-8},
issn = {0032-0935},
journal = {Planta},
month = {jan},
number = {3},
pages = {434--446},
pmid = {15252734},
title = {{The growth of soybean under free air [CO2] enrichment (FACE) stimulates photosynthesis while decreasing in vivo Rubisco capacity}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/15252734 http://link.springer.com/10.1007/s00425-004-1320-8},
volume = {220},
year = {2005}
}
@article{Cuellar2003,
abstract = {CellML is an XML-based exchange format developed by the University of Auckland in collaboration with Physiome Sciences, Inc. CellML 1.1 has a component-based architecture allowing a modeller to build complex systems of models that expand and reuse previously published models. CellML Metadata is a format for encoding contextual information for a model. CellML 1.1 can be used in conjunction with CellML Metadata to provide a complete description of the structure and underlying mathematics of biological models. A repository of over 200 electrophysiological, mechanical, signal transduction, and metabolic pathway models is available at www.cellml.org.},
author = {Cuellar, Autumn A. and Lloyd, Catherine M. and Nielsen, Poul F. and Bullivant, David P. and Nickerson, David P. and Hunter, Peter J.},
doi = {10.1177/0037549703040939},
issn = {0037-5497},
journal = {Simulation},
keywords = {Biological model,XML,markup language,mathematical model},
month = {dec},
number = {12},
pages = {740--747},
publisher = {SAGE Publications},
title = {{An Overview of CellML 1.1, a Biological Model Description Language}},
url = {http://journals.sagepub.com/doi/10.1177/0037549703040939},
volume = {79},
year = {2003}
}
@misc{celery,
title = {{Celery}},
url = {https://github.com/celery/celery},
year = {2018}
}
@misc{Stinner2018,
author = {Stinner, Victor},
title = {{Python perf module}},
url = {https://perf.readthedocs.io/en/latest/},
urldate = {2018-09-30},
year = {2018}
}
@article{Hucka2003,
author = {Hucka, M. and Finney, A. and Sauro, H. M. and Bolouri, H. and Doyle, J. C. and Kitano, H. and {and the rest of the SBML Forum:}, A. P. and Arkin, A. P. and Bornstein, B. J. and Bray, D. and Cornish-Bowden, A. and Cuellar, A. A. and Dronov, S. and Gilles, E. D. and Ginkel, M. and Gor, V. and Goryanin, I. I. and Hedley, W. J. and Hodgman, T. C. and Hofmeyr, J.-H. and Hunter, P. J. and Juty, N. S. and Kasberger, J. L. and Kremling, A. and Kummer, U. and {Le Novere}, N. and Loew, L. M. and Lucio, D. and Mendes, P. and Minch, E. and Mjolsness, E. D. and Nakayama, Y. and Nelson, M. R. and Nielsen, P. F. and Sakurada, T. and Schaff, J. C. and Shapiro, B. E. and Shimizu, T. S. and Spence, H. D. and Stelling, J. and Takahashi, K. and Tomita, M. and Wagner, J. and Wang, J.},
doi = {10.1093/bioinformatics/btg015},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Hucka et al. - 2003 - The systems biology markup language (SBML) a medium for representation and exchange of biochemical network models.pdf:pdf},
issn = {1367-4803},
journal = {Bioinformatics},
month = {mar},
number = {4},
pages = {524--531},
publisher = {Oxford University Press},
title = {{The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models}},
url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btg015},
volume = {19},
year = {2003}
}
@inproceedings{Gabriel2004,
abstract = {A large number of MPI implementations are currently available, each of which emphasize different aspects of high-performance computing or are intended to solve a specific research problem. The result is a myriad of incompatible MPI implementations, all of which require separate installation, and the combination of which present significant logistical challenges for end users. Building upon prior research, and influenced by experience gained from the code bases of the LAM/MPI, LA-MPI, and FT-MPI projects, Open MPI is an all-new, production-quality MPI-2 implementation that is fundamentally centered around component concepts. Open MPI provides a unique combination of novel features previously unavailable in an open-source, production-quality implementation of MPI. Its component architecture provides both a stable platform for third-party research as well as enabling the run-time composition of independent software add-ons. This paper presents a high-level overview the goals, design, and implementation of Open MPI.},
address = {Budapest, Hungary},
author = {Gabriel, Edgar and Fagg, Graham E. and Bosilca, George and Angskun, Thara and Dongarra, Jack J. and Squyres, Jeffrey M. and Sahay, Vishal and Kambadur, Prabhanjan and Barrett, Brian and Lumsdaine, Andrew and Castain, Ralph H. and Daniel, David J. and Graham, Richard L. and Woodall, Timothy S.},
booktitle = {Proceedings, 11th Eur. PVM/MPI Users' Gr. Meet.},
doi = {10.1007/978-3-540-30218-6_19},
pages = {97--104},
publisher = {Springer, Berlin, Heidelberg},
title = {{Open MPI: Goals, Concept, and Design of a Next Generation MPI Implementation}},
url = {http://link.springer.com/10.1007/978-3-540-30218-6{\_}19},
year = {2004}
}
@article{integration_prep,
author = {Kannan, Kavya and Wang, Yu and Lang, Meagan and Challa, Ghana S. and Srinivasan, Venkat and Long, Stephen P. and Turk, Matthew J. and Marshall-Colon, Amy},
journal = {in prep.},
title = {{A multiscale model of soybean leaf predicts the photosynthetic response to future CO2 concentrations}},
year = {2018}
}
@misc{appveyor,
title = {{AppVeyor: Continuous Integration solution for Windows and Linux}},
url = {https://www.appveyor.com/},
urldate = {2018-09-30},
year = {2018}
}
@techreport{obj,
abstract = {Object files define the geometry and other properties for objects in Wavefront's Advanced Visualizer. Object files can also be used to transfer geometric data back and forth between the Advanced Visualizer and other applications. Object files can be in ASCII format (.obj) or binary format (.mod). This appendix describes the ASCII format for object files. These files must have the extension .obj. In this release, the .obj file format supports both polygonal objects and free-form objects. Polygonal geometry uses points, lines, and faces to define objects while free-form geometry uses curves and surfaces.},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Unknown - Unknown - B1. Object Files (.obj).pdf:pdf},
title = {{B1. Object Files (.obj)}},
url = {http://www.cs.utah.edu/{~}boulos/cs3505/obj{\_}spec.pdf},
year = {1994}
}
@book{Martin2006,
author = {Martin, K. and Hoffman, B.},
edition = {3rd},
publisher = {Kitware},
title = {{Mastering CMake: A Cross-Platform Build System}},
year = {2006}
}
@misc{make,
publisher = {Free Software Foundation},
title = {{GNU Make}},
url = {https://www.gnu.org/software/make/},
year = {2001}
}
@misc{pandas,
title = {{pandas: Python Data Analysis Library}},
url = {https://pandas.pydata.org/},
urldate = {2018-10-12},
year = {2008}
}
@article{Gropp1996,
abstract = {MPI (Message Passing Interface) is a specification for a standard library for message passing that was defined by the MPI Forum, a broadly based group of parallel computer vendors, library writers, and applications specialists. Multiple implementations of MPI have been developed. In this paper, we describe MPICH, unique among existing implementations in its design goal of combining portability with high performance. We document its portability and performance and describe the architecture by which these features are simultaneously achieved. We also discuss the set of tools that accompany the free distribution of MPICH, which constitute the beginnings of a portable parallel programming environment. A project of this scope inevitably imparts lessons about parallel computing, the specification being followed, the current hardware and software environment for parallel computing, and project management; we describe those we have learned. Finally, we discuss future developments for MPICH, including those necessary to accommodate extensions to the MPI Standard now being contemplated by the MPI Forum.},
author = {Gropp, William and Lusk, Ewing and Doss, Nathan and Skjellum, Anthony},
doi = {10.1016/0167-8191(96)00024-5},
issn = {0167-8191},
journal = {Parallel Comput.},
month = {sep},
number = {6},
pages = {789--828},
publisher = {North-Holland},
title = {{A high-performance, portable implementation of the MPI message passing interface standard}},
url = {https://www.sciencedirect.com/science/article/pii/0167819196000245},
volume = {22},
year = {1996}
}
@article{Goldbaum2018,
author = {Goldbaum, Nathan J and Zuhone, John A and Turk, Matthew J and Kowalik, Kacper and Rosen, Anna L},
doi = {10.21105/joss.00809},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Goldbaum et al. - Unknown - unyt Handle, manipulate, and convert data with units in Python Software • Review • Repository • Archiv.pdf:pdf},
journal = {J. Open Source Softw.},
number = {28},
pages = {809},
title = {{unyt: Handle, manipulate, and convert data with units in Python Software • Review • Repository • Archive}},
url = {https://doi.org/10.21105/joss.00809},
volume = {3},
year = {2018}
}
@misc{travisci,
title = {{Travis CI - Test and Deploy Your Code with Confidence}},
url = {https://travis-ci.org/},
urldate = {2018-09-30},
year = {2018}
}
@book{Stallman2004,
abstract = {"June 2004." Includes indexes.},
author = {Stallman, Richard. and McGrath, Roland. and Smith, Paul D.},
isbn = {1882114833},
pages = {184},
publisher = {GNU Press},
title = {{GNU make : a program for directed recompilation : GNU make version 3.81}},
url = {https://dl.acm.org/citation.cfm?id=1205748},
year = {2004}
}
@techreport{ply,
author = {Turk, Greg},
institution = {The Board of Trustees of The Leland Stanford Junior University},
title = {{The PLY Polygon File Format}},
url = {https://web.archive.org/web/20161204152348/http://www.dcs.ed.ac.uk/teaching/cs4/www/graphics/Web/ply.html},
year = {1994}
}
@misc{jsyaml,
title = {{JS-YAML - YAML 1.2 parser / writer for JavaScript}},
url = {https://github.com/nodeca/js-yaml},
urldate = {2018-10-12},
year = {2011}
}
@misc{pyyaml,
title = {{PyYAML}},
url = {https://pyyaml.org/},
urldate = {2018-10-12},
year = {2006}
}
@misc{cmake,
publisher = {Kitware},
title = {{CMake}},
url = {https://cmake.org/},
year = {2003}
}
@book{Akgul2013,
abstract = {Title from PDF title page (viewed Apr. 26, 2013).},
author = {Akgul, Faruk.},
isbn = {178216104X},
publisher = {Packt Publishing},
title = {{ZeroMQ : use ZeroMQ and learn how to apply different message patterns}},
url = {https://dl.acm.org/citation.cfm?id=2523409},
year = {2013}
}
@misc{ZMQ,
publisher = {iMatix Corporation},
title = {{ZeroMQ}},
url = {http://zeromq.org/},
year = {2007}
}
@misc{jsonschema,
title = {{JSON Schema | The home of JSON Schema}},
url = {https://json-schema.org/},
urldate = {2018-09-30},
year = {2018}
}
@misc{Simonov2006,
author = {Simonov, Kirill},
title = {{LibYAML - A YAML parser and emitter library.}},
url = {https://pyyaml.org/wiki/LibYAML},
urldate = {2018-10-12},
year = {2006}
}
@book{Eaton2002,
author = {Eaton, John W.},
isbn = {0-9541617-2-6},
publisher = {Network Theory Limited},
title = {{GNU Octave Manual}},
year = {2002}
}

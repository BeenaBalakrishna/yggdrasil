#!/usr/bin/env python
# coding: utf-8

# In[ ]:


import numpy as np


# In[ ]:


with open("output_16.ply", "r") as f:
    while f.readline().strip() != "end_header": pass
    vertices = np.zeros((18858, 3), dtype="f4")
    indices = np.zeros((26308, 3), dtype="u4")
    vertexcolors = np.zeros((vertices.shape[0], 3), dtype="float32")
    for i in range(18858):
        v = f.readline().split()
        vertices[i,:] = v[:3]
        vertexcolors[i,:] = v[3:]
    for i in range(26308):
        indices[i,:] = f.readline().split()[-3:]
vertexcolors /= 255.


# In[ ]:


import pythreejs

plantgeometry = pythreejs.BufferGeometry(attributes=dict(
    position=pythreejs.BufferAttribute(vertices, normalized=False),
    index=pythreejs.BufferAttribute(indices.ravel(order="C"), normalized=False),
    color=pythreejs.BufferAttribute(vertexcolors),
))
plantgeometry.exec_three_obj_method('computeFaceNormals')
mat = pythreejs.MeshStandardMaterial(vertexColors='VertexColors', side='DoubleSide')
myobjectCube = pythreejs.Mesh(
    geometry=plantgeometry,
    material=mat,
    position=[0,0,0]   # Center the cube
)
cCube = pythreejs.PerspectiveCamera(
    position=[25, 35, 100], fov=20,
    children=[pythreejs.DirectionalLight(color='#ffffff', position=[100, 100, 100], intensity=0.5)])
sceneCube = pythreejs.Scene(children=[myobjectCube, cCube, pythreejs.AmbientLight(color='#dddddd')])

rendererCube = pythreejs.Renderer(camera=cCube, background='white', background_opacity=1,
                        scene = sceneCube, controls=[pythreejs.OrbitControls(controlling=cCube)],
                                 width=800, height=800)

display(rendererCube)


# In[ ]:


import ipywidgets.embed
ipywidgets.embed.embed_minimal_html('temp/plants/export.html', views=None)


# In[ ]:


plantgeometry.attributes['color'] = pythreejs.BufferAttribute(vertexcolors * 100)


# In[ ]:


import ipywidgets


# ## ipywidgets.HBox([rendererCube, ipywidgets.Label('hi there')])

# In[ ]:





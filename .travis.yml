language: python
sudo: required
cache:
  pip: true
  directories:
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

env:
  global:
    NUMPY=numpy
    MATPLOTLIB=matplotlib
    MPLBACKEND=agg
    INSTALLZMQ=1
    INSTALLRMQ=0
    INSTALLAPY=0
    INSTALLLPY=0
    DEPLOYPYPI=0

matrix:
  include:
    - os: linux
      env: PYTHON=2.7 NUMPY=numpy==1.13.0 MATPLOTLIB=matplotlib==1.5.3 INSTALLZMQ=0 INSTALLRMQ=0 DEPLOYPYPI=1
    - os: linux
      env: PYTHON=2.7 INSTALLRMQ=1 INSTALLLPY=1 CIS_ENABLE_LONG_TESTS=1
    - os: linux
      env: PYTHON=3.4
    - os: linux
      env: PYTHON=3.5 INSTALLAPY=1
    - os: linux
      env: PYTHON=3.5 INSTALLZMQ=0 INSTALLRMQ=0
    - os: linux
      env: PYTHON=3.6 CIS_DEFAULT_COMM=ZMQComm INSTALLRMQ=1 CIS_ENABLE_LONG_TESTS=1
    - os: linux
      env: PYTHON=3.7
      dist: xenial
      sudo: true
    # Only ever test one python 2 and one python 3 because brew dosn't allow specification of python version
    - os: osx
      env: PYTHON=2.7 INSTALLRMQ=0 INSTALLZMQ=0 CIS_ENABLE_LONG_TESTS=1
      osx_image: xcode7.3
      language: generic  # https://github.com/travis-ci/travis-ci/issues/2312
      cache:
         pip: false
         directories:
          - $HOME/Library/Caches/pip
    - os: osx
      env: PYTHON=3.6 INSTALLRMQ=0 DEPLOYPYPI=1 CIS_ENABLE_LONG_TESTS=1
      osx_image: xcode7.3
      language: generic  # https://github.com/travis-ci/travis-ci/issues/2312
      cache:
         pip: false
         directories:
          - $HOME/Library/Caches/pip
    - os: linux
      env: CONDA=2.7
    - os: linux
      env: CONDA=3.6
    - os: linux
      env: CONDA=3.7
    - os: osx
      env: CONDA=2.7
      osx_image: xcode7.3
      language: generic  # https://github.com/travis-ci/travis-ci/issues/2312
    - os: osx
      env: CONDA=3.6
      osx_image: xcode7.3
      language: generic  # https://github.com/travis-ci/travis-ci/issues/2312
    - os: osx
      env: CONDA=3.7
      dist: xenial
      sudo: true
      osx_image: xcode7.3
      language: generic  # https://github.com/travis-ci/travis-ci/issues/2312

      
before_install:
  - |
    echo Installing os level packages...;
    sudo apt-get update
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
       brew update
       # brew install ccache
       # export PATH=/usr/local/opt/ccache/libexec:$PATH
       brew install valgrind
    else
       # pip install --upgrade virtualenv
       # python -m virtualenv venv
       # source venv/bin/activate
       export PATH=/usr/lib/ccache:$PATH
       sudo apt-get install strace valgrind
    fi

    # Install from source in virtual env
    if [[ -n "$PYTHON" ]]; then
      echo Installing Python using virtualenv...;
      if [[ "$TRAVIS_OS_NAME" == "osx" && "${PYTHON:0:1}" == "3" ]]; then
        brew update; brew install python3;
      fi
      pip install --user --upgrade pip virtualenv
      virtualenv -p python$PYTHON venv
      source venv/bin/activate
    fi

    # Install from conda in conda env
    if [-n "$CONDA" ]; then
      echo Installing Python using conda...;
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
      wget https://repo.anaconda.com/miniconda/Miniconda${CONDA:0:1}-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh
      # wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh
      bash miniconda.sh -b -p $HOME/miniconda
      export PATH="$HOME/miniconda/bin:$PATH"
      hash -r
      conda config --set always_yes yes --set changeps1 no
      conda config --add channels conda-forge
      conda update -q conda
      conda install -q conda-build
      conda create -q -n test-environment python=$CONDA
      source activate test-environment
      # if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      #   conda init
      # fi
      conda info -a
    fi
    
    # Install AstroPy
    if [[ $INSTALLAPY == '1' ]]; then
       echo Installing AstroPy...;
       pip install astropy
    fi

    # Install LPy
    if [[ $INSTALLLPY == '1' ]]; then
       echo Installing LPy...;
       sh ci/install-lpy-linux.sh
    fi

    # Install ZeroMQ
    if [[ $INSTALLZMQ == '1' ]]; then
       echo Installing ZeroMQ...;
       if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
          sh ci/install-czmq-osx.sh
       else
          sh ci/install-czmq-linux.sh
       fi
    fi

    # Install RabbitMQ & Start a server
    if [[ $INSTALLRMQ == '1' ]]; then
       echo Installing RabbitMQ...;
       pip install pika
       if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
          sh ci/install-rmqserver-osx.sh
       else
          sh ci/install-rmqserver-linux.sh
       fi

       echo Starting RabbitMQ...;
       if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
          export PATH="${PATH}:/usr/local/sbin";
          sh ci/start-rmqserver-osx.sh
       else
          sh ci/start-rmqserver-linux.sh
       fi

    fi

install:
  - |
    # setup environment
    ccache -s
    # Upgrade pip and setuptools and wheel to get clean install
    pip install --upgrade pip
    pip install --upgrade wheel
    pip install --upgrade setuptools
    # Install dependencies
    pip install $NUMPY
    pip install $MATPLOTLIB
    pip install nose coverage coveralls codecov flake8
    # Install cis_interface
    if [ -n "$PYTHON" ]; then
      python setup.py sdist
      pip install --verbose dist/*.tar.gz
    elif [ -n "$CONDA" ]; then
      conda build recipe/meta.yaml
      conda install --use-local cis_interface
    fi

before_script:
  - |
    flake8 cis_interface

jobs:
  include:
    - stage: "Tests"
      name: "Flake8"
      script: |
              flake8 cis_interface
    - name: "Full tests"
      script: |
              nosetests -svx --nologcapture --with-coverage --cover-package=cis_interface
    deploy:
      name: "Deploy to PyPI"
      provider: pypi
      edge: true
      skip_existing: true
      distributions: sdist bdist_wheel --universal
      user: langmm
      password:
        secure: cYP65ktykU8vzNpjDxVJ7hb5VIA8pcG0+LfaboyJ/7jJ85OFFMb7k12cuzmcFgyCMzxaMaR74ZwSL1Zs3jwfpsfKt22rdXV3YtAlrbLfHDd1ReoPeg6ZHSHYlZq/pkGowB7OHZMPaF7Pwjl2igWE1ZrJ8q/K2vVCt/cv9JhZXZS3nnC3iTY9jbvq/sWp6QChy61s5ekxf9m3PJBcS3s/n34ZyuQt8eF73YSMlztWNLTBWKIfK2LOpDXXKDWhFRDhlmt3mA88I2HI1ZxFyANIrrMwGEBIJOVWlAfnPOdoI36JW9wqv3DXj9RGVDNcVwfW5/juxMF+DSHORwQDuTn3E6Z0Q/ic6rLndI+vzHjYdjPeLXutggOEGTjq32LP6FkJ+3LyrFoQXwZIZ+FqLRni/HyppoyIQ+S5NneLB7Wj5Hyja7ycmwLZnlnixUz3qHOvIv6Hpv/koDltqyB5gzf0xvbNUMkRCHuuovtbqtmRtxA1BL8VKoGVzZ7zHrWG+iTGZXSFhgrcO1k8OYzxaWR2O/NeeURuy3ViD+xzPSvMASRX0sCULOf3o2rgDdJyTBjW5KZcLqVcOiGZoHgwOjZY0NQ50R7mE7T+CQmoYtil1Ovmm8b6NUhoE0z6jEgDVfEhKo9/WACHamzIQ4afrYsEWlQhDSg+dvrzS7OciILOK+Q=
      on:
        tags: true
        condition: $DEPLOYPYPI = 1
    

after_success:
  - coveralls
  - codecov


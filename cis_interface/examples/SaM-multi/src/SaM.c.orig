// Author Venkatraman Srinivasan
#include <stdio.h>
#include <stdlib.h>

#include "PsiInterface.h"

int main(int argc,char *argv[]){
<<<<<<< 9677beea961453b384958ba830fbf7cb60af5ce8
	printf("hello from C\n");
=======
>>>>>>> multimodel messaging test
    const uint BSIZE = 8192; // the max
    char buf1[BSIZE];
    char buf2[BSIZE];
    char outbuf[BSIZE];
    char finalbuf[BSIZE];

    PsiInput Input = psi_input("cinput1");
    PsiInput Static = psi_input("cstatic");
    PsiOutput Output = psi_output("coutput");
<<<<<<< 9677beea961453b384958ba830fbf7cb60af5ce8
    PsiInput inFinal = psi_input("mloutput");
    PsiOutput outFinal = psi_output("finalOut");

    psi_recv(Input, buf1, BSIZE);
	printf("got input 1\n");
    psi_recv(Static, buf2, BSIZE);
	printf("got input static\n");
    sprintf(outbuf,"%d", atoi(buf1) + atoi(buf2));
    psi_send(Output, outbuf, strlen(outbuf));
	printf("sent output: %s\n", outbuf);

    psi_recv(inFinal, finalbuf, BSIZE);
	printf("got final\n");
    sprintf(outbuf, "Final answer: %s\n", finalbuf);
    psi_send(outFinal, outbuf, strlen(outbuf));
	printf("sent final\n");
	printf("bye from C\n");
=======
    PsiInput inFinal = psi_input("cfinal");
    PsiOutput outFinal = psi_output("finalOut");

    psi_recv(Input, buf1, BSIZE);
    psi_recv(Static, buf2, BSIZE);
    sprintf(outbuf,"%d", atoi(buf1) + atoi(buf2));
    psi_send(Output, outbuf, strlen(outbuf));

    psi_recv(inFinal, finalbuf, BSIZE);
    sprintf(outbuf, "Final answer: %d\n");
    psi_send(outFinal, outbuf, strlen(outbuf));
>>>>>>> multimodel messaging test
    return 0;
}

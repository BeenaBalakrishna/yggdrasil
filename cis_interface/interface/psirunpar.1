#!/bin/bash -f
set -x

usage () {
cat << END
  Usage:  psirunpar <#instances> <model-yaml> [ optional args for gnu-parallel ]
  
  Picks up the PSI environment variables and current code base and runs a number of models in parallel.

  Recommendations for modelers:
    - Program should print to standard output, local logs are not collected by default.
    - Resources(files) in yaml specifications are transferred, output resources are collected.
END
}

case $1 in 
 -h)  usage ;; 
  h)  usage ;;
help)  usage ;;
'') usage ;;
esac


RELPATH=$( realpath --relative-to $(git rev-parse --show-toplevel) $(pwd) )
SETUP=${RELPATH}/RMQ-support/interface/setup.sh
UUID=$(uuid -v1 -F siv)
WDIR=$(pwd)/$UUID
mkdir $UUID


# Make the script file
while [[ $# -ne 0 ]]; do
  TMPFILE=$(mktemp -p $UUID)
  cat - >> $TMPFILE <<EOF
#!/bin/bash
set -x
pwd
. $(which setup.sh)
hostname
EOF

  INSTANCES=$1
  PROG=$2
  echo "Setup $INSTANCES of $2 in $RELPATH with ID $UUID"
  for i in $(seq $INSTANCES); do
    echo "psirun ${PROG}" >> $TMPFILE
  done
shift 2
done

cat $TMPFILE | parallel --workdir $WDIR --tag --sshlogin ${PSI_CLUSTER} --transfer {}  cat {} ::: $TMPFILE ::: $TMPFILE

#cat commands | parallel -j0 --sshloginfile ~/.hosts.psi {}
#parallel -j0 --sshloginfile ~/.hosts.psi < commands
